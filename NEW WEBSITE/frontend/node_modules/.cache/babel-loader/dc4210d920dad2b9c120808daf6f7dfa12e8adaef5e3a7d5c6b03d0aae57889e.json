{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/Post.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  currentUserId,\n  handleDeletePost,\n  handleEditPost,\n  handleAddReply\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(post.title);\n  const [updatedContent, setUpdatedContent] = useState(post.content);\n  const [replyContent, setReplyContent] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState(false);\n\n  // Save edited post\n  const saveEdit = async () => {\n    await handleEditPost(post._id, updatedTitle, updatedContent);\n    setIsEditing(false);\n  };\n\n  // Add reply to post\n  const submitReply = async e => {\n    e.preventDefault();\n    if (replyContent.trim() !== '') {\n      await handleAddReply(post._id, replyContent);\n      setReplyContent('');\n      setShowReplyForm(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTitle,\n        onChange: e => setUpdatedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: updatedContent,\n        onChange: e => setUpdatedContent(e.target.value),\n        rows: \"4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEdit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowReplyForm(!showReplyForm),\n          children: showReplyForm ? 'Cancel Reply' : 'Reply'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), post.author === currentUserId && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsEditing(true),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePost(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), showReplyForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reply-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: replyContent,\n          onChange: e => setReplyContent(e.target.value),\n          rows: \"3\",\n          placeholder: \"Write your reply...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitReply,\n          children: \"Submit Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), post.replies && post.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"replies\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Replies:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), post.replies.map((reply, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [reply.author, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 22\n            }, this), \" \", reply.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"G+PKsGjkCQiZAjAVoigGamoG9jE=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","post","currentUserId","handleDeletePost","handleEditPost","handleAddReply","_s","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","title","updatedContent","setUpdatedContent","content","replyContent","setReplyContent","showReplyForm","setShowReplyForm","saveEdit","_id","submitReply","e","preventDefault","trim","className","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","rows","onClick","author","placeholder","replies","length","map","reply","index","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/Post.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Post = ({ post, currentUserId, handleDeletePost, handleEditPost, handleAddReply }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(post.title);\n  const [updatedContent, setUpdatedContent] = useState(post.content);\n  const [replyContent, setReplyContent] = useState('');\n  const [showReplyForm, setShowReplyForm] = useState(false);\n\n  // Save edited post\n  const saveEdit = async () => {\n    await handleEditPost(post._id, updatedTitle, updatedContent);\n    setIsEditing(false);\n  };\n\n  // Add reply to post\n  const submitReply = async (e) => {\n    e.preventDefault();\n    if (replyContent.trim() !== '') {\n      await handleAddReply(post._id, replyContent);\n      setReplyContent('');\n      setShowReplyForm(false);\n    }\n  };\n\n  return (\n    <div className=\"post\">\n      {isEditing ? (\n        <div>\n          <input\n            type=\"text\"\n            value={updatedTitle}\n            onChange={(e) => setUpdatedTitle(e.target.value)}\n          />\n          <textarea\n            value={updatedContent}\n            onChange={(e) => setUpdatedContent(e.target.value)}\n            rows=\"4\"\n          />\n          <button onClick={saveEdit}>Save</button>\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\n        </div>\n      ) : (\n        <div>\n          <h2>{post.title}</h2>\n          <p>{post.content}</p>\n          {/* Actions */}\n          <div className=\"post-actions\">\n            <button onClick={() => setShowReplyForm(!showReplyForm)}>\n              {showReplyForm ? 'Cancel Reply' : 'Reply'}\n            </button>\n            {post.author === currentUserId && (\n              <>\n                <button onClick={() => setIsEditing(true)}>Edit</button>\n                <button onClick={() => handleDeletePost(post._id)}>Delete</button>\n              </>\n            )}\n          </div>\n          {/* Reply Form */}\n          {showReplyForm && (\n            <div className=\"reply-form\">\n              <textarea\n                value={replyContent}\n                onChange={(e) => setReplyContent(e.target.value)}\n                rows=\"3\"\n                placeholder=\"Write your reply...\"\n              />\n              <button onClick={submitReply}>Submit Reply</button>\n            </div>\n          )}\n          {/* Replies */}\n          {post.replies && post.replies.length > 0 && (\n            <div className=\"replies\">\n              <h3>Replies:</h3>\n              {post.replies.map((reply, index) => (\n                <div key={index} className=\"reply\">\n                  <p><strong>{reply.author}:</strong> {reply.content}</p>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Post;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}