{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/ProfessorCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport './Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StaffCalendar({\n  user\n}) {\n  _s();\n  const {\n    email: userEmail\n  } = user; // Destructure email from user object\n  const [events, setEvents] = useState([]);\n  const [formData, setFormData] = useState({\n    title: '',\n    date: new Date().toISOString().split('T')[0],\n    startTime: '',\n    endTime: '',\n    email: userEmail,\n    // Pre-fill the email field with userEmail\n    staffEmail: '',\n    // Use staffEmail instead of tutorName\n    notifyTime: '1 hour',\n    optInNotifications: true\n  });\n  const [staffMembers, setStaffMembers] = useState([]); // State to store staff members\n  const [selectedStaff, setSelectedStaff] = useState('');\n  const [viewMode, setViewMode] = useState('student'); // State to toggle between views\n  const [studentFilter, setStudentFilter] = useState('');\n  const [studentEmails, setStudentEmails] = useState([]); // State to store unique student emails\n\n  // Generate time intervals for selection\n  const generateTimeIntervals = (start, end) => {\n    const intervals = [];\n    let currentTime = new Date(`1970-01-01T${start}:00`);\n    const endTime = new Date(`1970-01-01T${end}:00`);\n    while (currentTime <= endTime) {\n      intervals.push(currentTime.toTimeString().substring(0, 5));\n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n    return intervals;\n  };\n  const timeOptions = generateTimeIntervals('08:00', '20:00');\n\n  // Fetch events and staff from the server when the component mounts\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/events?staffEmail=${userEmail}`); // Adjust URL to filter events by staffEmail\n        if (!response.ok) {\n          throw new Error('Failed to fetch events');\n        }\n        const data = await response.json();\n        setEvents(data);\n\n        // Extract unique student emails for staff view filtering\n        const emails = Array.from(new Set(data.map(event => event.email)));\n        setStudentEmails(emails);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    const fetchStaffMembers = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/staff'); // Adjust the URL to fetch staff members\n        if (!response.ok) {\n          throw new Error('Failed to fetch staff members');\n        }\n        const data = await response.json();\n        setStaffMembers(data);\n      } catch (error) {\n        console.error('Error fetching staff members:', error);\n      }\n    };\n    fetchEvents();\n    fetchStaffMembers();\n  }, [userEmail]);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formData.endTime) {\n      alert('Please select an end time.');\n      return;\n    }\n    const newEvent = {\n      title: formData.title,\n      start: `${formData.date}T${formData.startTime}`,\n      end: `${formData.date}T${formData.endTime}`,\n      email: formData.email,\n      staffEmail: formData.staffEmail,\n      // Use the selected staff member's email\n      notifyTime: formData.notifyTime,\n      optInNotifications: formData.optInNotifications\n    };\n    fetch('http://localhost:5000/api/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to create event');\n      }\n      return response.json();\n    }).then(data => {\n      setEvents(prevEvents => [...prevEvents, {\n        title: data.title,\n        start: data.start,\n        end: data.end,\n        extendedProps: {\n          email: data.email,\n          staffEmail: data.staffEmail,\n          // Add staffEmail to extendedProps\n          notifyTime: data.notifyTime,\n          optInNotifications: data.optInNotifications\n        }\n      }]);\n      setFormData({\n        title: '',\n        date: formData.date,\n        startTime: '',\n        endTime: '',\n        email: userEmail,\n        staffEmail: '',\n        // Reset the staff email\n        notifyTime: '1 hour',\n        optInNotifications: true\n      });\n    }).catch(error => {\n      console.error('Error adding event:', error);\n      alert('There was an error booking the appointment. Please try again.');\n    });\n  };\n\n  // Filter events by selected staff and student email\n  const filteredEvents = events.filter(event => {\n    const matchesStaff = selectedStaff ? event.extendedProps.staffEmail === selectedStaff : true;\n    const matchesStudent = studentFilter ? event.email === studentFilter : true; // Match email exactly\n    return matchesStaff && matchesStudent;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: '10px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '5px'\n            },\n            children: \"View Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setViewMode(e.target.value),\n            value: viewMode,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"student\",\n              children: \"Student View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"staff\",\n              children: \"Staff View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), viewMode === 'student' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '5px'\n            },\n            children: \"Filter by Staff:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setSelectedStaff(e.target.value),\n            value: selectedStaff,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), staffMembers.map(staff => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: staff.email,\n              children: [staff.name, \" (\", staff.email, \")\"]\n            }, staff._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), viewMode === 'staff' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '5px'\n            },\n            children: \"Filter by Student Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setStudentFilter(e.target.value),\n            value: studentFilter,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All Students\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), studentEmails.map(email => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: email,\n              children: email\n            }, email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar\",\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n            initialView: \"dayGridMonth\",\n            selectable: true,\n            events: filteredEvents,\n            dateClick: info => setFormData({\n              ...formData,\n              date: info.dateStr\n            }),\n            displayEventTime: false,\n            headerToolbar: {\n              left: 'today prev,next',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), viewMode === 'student' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"booking-form\",\n          style: {\n            width: '30%',\n            marginLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Book an Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"title\",\n                value: formData.title,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Staff Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"staffEmail\",\n                value: formData.staffEmail,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Staff\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), staffMembers.map(staff => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: staff.email,\n                  children: [staff.name, \" (\", staff.email, \")\"]\n                }, staff._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"date\",\n                value: formData.date,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"startTime\",\n                value: formData.startTime,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Start Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), timeOptions.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: time,\n                  children: time\n                }, time, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"endTime\",\n                value: formData.endTime,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select End Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), timeOptions.map(time => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: time,\n                  children: time\n                }, time, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: formData.email,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Reminder Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"notifyTime\",\n                value: formData.notifyTime,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1 hour\",\n                  children: \"1 hour\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"30 minutes\",\n                  children: \"30 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"15 minutes\",\n                  children: \"15 minutes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Receive Notifications:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                name: \"optInNotifications\",\n                checked: formData.optInNotifications,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(StaffCalendar, \"wPayrTdTLByg4/sHf4h0BQyEapU=\");\n_c = StaffCalendar;\nvar _c;\n$RefreshReg$(_c, \"StaffCalendar\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","jsxDEV","_jsxDEV","StaffCalendar","user","_s","email","userEmail","events","setEvents","formData","setFormData","title","date","Date","toISOString","split","startTime","endTime","staffEmail","notifyTime","optInNotifications","staffMembers","setStaffMembers","selectedStaff","setSelectedStaff","viewMode","setViewMode","studentFilter","setStudentFilter","studentEmails","setStudentEmails","generateTimeIntervals","start","end","intervals","currentTime","push","toTimeString","substring","setMinutes","getMinutes","timeOptions","fetchEvents","response","fetch","ok","Error","data","json","emails","Array","from","Set","map","event","error","console","fetchStaffMembers","handleInputChange","e","name","value","type","checked","target","handleSubmit","preventDefault","alert","newEvent","method","headers","body","JSON","stringify","then","prevEvents","extendedProps","catch","filteredEvents","filter","matchesStaff","matchesStudent","className","children","style","display","flexDirection","alignItems","width","justifyContent","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","staff","_id","flexGrow","plugins","initialView","selectable","dateClick","info","dateStr","displayEventTime","headerToolbar","left","center","right","marginLeft","onSubmit","required","time","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/ProfessorCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport './Calendar.css';\n\nexport default function StaffCalendar({ user }) {\n  const { email: userEmail } = user; // Destructure email from user object\n  const [events, setEvents] = useState([]);\n  const [formData, setFormData] = useState({\n    title: '',\n    date: new Date().toISOString().split('T')[0],\n    startTime: '',\n    endTime: '',\n    email: userEmail, // Pre-fill the email field with userEmail\n    staffEmail: '', // Use staffEmail instead of tutorName\n    notifyTime: '1 hour',\n    optInNotifications: true,\n  });\n  const [staffMembers, setStaffMembers] = useState([]); // State to store staff members\n  const [selectedStaff, setSelectedStaff] = useState('');\n  const [viewMode, setViewMode] = useState('student'); // State to toggle between views\n  const [studentFilter, setStudentFilter] = useState('');\n  const [studentEmails, setStudentEmails] = useState([]); // State to store unique student emails\n\n  // Generate time intervals for selection\n  const generateTimeIntervals = (start, end) => {\n    const intervals = [];\n    let currentTime = new Date(`1970-01-01T${start}:00`);\n    const endTime = new Date(`1970-01-01T${end}:00`);\n\n    while (currentTime <= endTime) {\n      intervals.push(currentTime.toTimeString().substring(0, 5));\n      currentTime.setMinutes(currentTime.getMinutes() + 30);\n    }\n\n    return intervals;\n  };\n\n  const timeOptions = generateTimeIntervals('08:00', '20:00');\n\n  // Fetch events and staff from the server when the component mounts\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/events?staffEmail=${userEmail}`); // Adjust URL to filter events by staffEmail\n        if (!response.ok) {\n          throw new Error('Failed to fetch events');\n        }\n        const data = await response.json();\n        setEvents(data);\n        \n        // Extract unique student emails for staff view filtering\n        const emails = Array.from(new Set(data.map(event => event.email)));\n        setStudentEmails(emails);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n\n    const fetchStaffMembers = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/staff'); // Adjust the URL to fetch staff members\n        if (!response.ok) {\n          throw new Error('Failed to fetch staff members');\n        }\n        const data = await response.json();\n        setStaffMembers(data);\n      } catch (error) {\n        console.error('Error fetching staff members:', error);\n      }\n    };\n\n    fetchEvents();\n    fetchStaffMembers();\n  }, [userEmail]);\n\n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!formData.endTime) {\n      alert('Please select an end time.');\n      return;\n    }\n  \n    const newEvent = {\n      title: formData.title,\n      start: `${formData.date}T${formData.startTime}`,\n      end: `${formData.date}T${formData.endTime}`,\n      email: formData.email,\n      staffEmail: formData.staffEmail, // Use the selected staff member's email\n      notifyTime: formData.notifyTime,\n      optInNotifications: formData.optInNotifications,\n    };\n  \n    fetch('http://localhost:5000/api/events', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newEvent),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to create event');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setEvents(prevEvents => [\n          ...prevEvents,\n          {\n            title: data.title,\n            start: data.start,\n            end: data.end,\n            extendedProps: {\n              email: data.email,\n              staffEmail: data.staffEmail, // Add staffEmail to extendedProps\n              notifyTime: data.notifyTime,\n              optInNotifications: data.optInNotifications,\n            },\n          },\n        ]);\n        setFormData({\n          title: '',\n          date: formData.date,\n          startTime: '',\n          endTime: '',\n          email: userEmail,\n          staffEmail: '', // Reset the staff email\n          notifyTime: '1 hour',\n          optInNotifications: true,\n        });\n      })\n      .catch((error) => {\n        console.error('Error adding event:', error);\n        alert('There was an error booking the appointment. Please try again.');\n      });\n  };\n\n  // Filter events by selected staff and student email\n  const filteredEvents = events.filter(event => {\n    const matchesStaff = selectedStaff ? event.extendedProps.staffEmail === selectedStaff : true;\n    const matchesStudent = studentFilter ? event.email === studentFilter : true; // Match email exactly\n    return matchesStaff && matchesStudent;\n  });\n\n  return (\n    <div className=\"calendar-container\">\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\n        {/* Filters positioned directly above the calendar */}\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '10px', width: '100%' }}>\n          <div style={{ marginRight: '20px' }}>\n            <label style={{ marginRight: '5px' }}>View Mode:</label>\n            <select onChange={(e) => setViewMode(e.target.value)} value={viewMode}>\n              <option value=\"student\">Student View</option>\n              <option value=\"staff\">Staff View</option>\n            </select>\n          </div>\n  \n          {viewMode === 'student' && (\n            <div style={{ marginRight: '20px' }}>\n              <label style={{ marginRight: '5px' }}>Filter by Staff:</label>\n              <select onChange={(e) => setSelectedStaff(e.target.value)} value={selectedStaff}>\n                <option value=\"\">All Staff</option>\n                {staffMembers.map((staff) => (\n                  <option key={staff._id} value={staff.email}>{staff.name} ({staff.email})</option>\n                ))}\n              </select>\n            </div>\n          )}\n  \n          {viewMode === 'staff' && (\n            <div>\n              <label style={{ marginRight: '5px' }}>Filter by Student Email:</label>\n              <select onChange={(e) => setStudentFilter(e.target.value)} value={studentFilter}>\n                <option value=\"\">All Students</option>\n                {studentEmails.map((email) => (\n                  <option key={email} value={email}>\n                    {email}\n                  </option>\n                ))}\n              </select>\n            </div>\n          )}\n        </div>\n  \n        {/* Calendar and booking form positioned side-by-side */}\n        <div style={{ display: 'flex', justifyContent: 'space-between', width: '100%' }}>\n          <div className=\"calendar\" style={{ flexGrow: 1 }}>\n            <FullCalendar\n              plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n              initialView=\"dayGridMonth\"\n              selectable={true}\n              events={filteredEvents}\n              dateClick={(info) => setFormData({ ...formData, date: info.dateStr })}\n              displayEventTime={false}\n              headerToolbar={{\n                left: 'today prev,next',\n                center: 'title',\n                right: 'dayGridMonth,timeGridWeek,timeGridDay'\n              }}\n            />\n          </div>\n  \n          {viewMode === 'student' && (\n            <div className=\"booking-form\" style={{ width: '30%', marginLeft: '20px' }}>\n              <h2>Book an Appointment</h2>\n              <form onSubmit={handleSubmit}>\n                <div>\n                  <label>Title:</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    value={formData.title}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Staff Email:</label>\n                  <select\n                    name=\"staffEmail\"\n                    value={formData.staffEmail}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"\">Select Staff</option>\n                    {staffMembers.map((staff) => (\n                      <option key={staff._id} value={staff.email}>{staff.name} ({staff.email})</option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label>Date:</label>\n                  <input\n                    type=\"date\"\n                    name=\"date\"\n                    value={formData.date}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Start Time:</label>\n                  <select\n                    name=\"startTime\"\n                    value={formData.startTime}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"\">Select Start Time</option>\n                    {timeOptions.map((time) => (\n                      <option key={time} value={time}>\n                        {time}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label>End Time:</label>\n                  <select\n                    name=\"endTime\"\n                    value={formData.endTime}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"\">Select End Time</option>\n                    {timeOptions.map((time) => (\n                      <option key={time} value={time}>\n                        {time}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label>Email:</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Reminder Time:</label>\n                  <select name=\"notifyTime\" value={formData.notifyTime} onChange={handleInputChange}>\n                    <option value=\"1 hour\">1 hour</option>\n                    <option value=\"30 minutes\">30 minutes</option>\n                    <option value=\"15 minutes\">15 minutes</option>\n                  </select>\n                </div>\n                <div>\n                  <label>Receive Notifications:</label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"optInNotifications\"\n                    checked={formData.optInNotifications}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <button type=\"submit\">Book Appointment</button>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );    \n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}