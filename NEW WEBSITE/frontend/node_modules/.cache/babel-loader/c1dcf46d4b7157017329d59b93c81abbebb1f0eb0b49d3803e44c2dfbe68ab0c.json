{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/DiscussionBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Make sure axios is imported\nimport './discussionBoard.css';\nimport Post from './Post'; // Import the Post component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiscussionBoard = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showCreatePost, setShowCreatePost] = useState(false);\n\n  // Fetch all posts once on component mount\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []); // Empty dependency array means this only runs once, preventing infinite loops\n\n  // Handler for creating a new post\n  const handleCreatePost = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/posts', {\n        title: newPostTitle,\n        content: newPostContent,\n        author: 'currentUserId' // Replace with the actual user id\n      });\n      setPosts([...posts, response.data]);\n      setNewPostTitle('');\n      setNewPostContent('');\n      setShowCreatePost(false);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Handler for deleting a post\n  const handleDeletePost = async postId => {\n    try {\n      await axios.delete(`http://localhost:3000/posts/${postId}`);\n      setPosts(posts.filter(post => post._id !== postId));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  // Handler for editing a post\n  const handleEditPost = async (postId, updatedTitle, updatedContent) => {\n    try {\n      const response = await axios.put(`http://localhost:3000/posts/${postId}`, {\n        title: updatedTitle,\n        content: updatedContent\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data : post));\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  };\n\n  // Handler for adding a reply to a post\n  const handleAddReply = async (postId, replyContent) => {\n    try {\n      const response = await axios.post(`http://localhost:3000/posts/${postId}/replies`, {\n        content: replyContent,\n        author: 'currentUserId' // Replace with the actual user id\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data : post));\n    } catch (error) {\n      console.error('Error adding reply:', error);\n    }\n  };\n\n  // Filter posts based on search query\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchQuery.toLowerCase()) || post.content.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"web-name\",\n      children: \"Discussion Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowCreatePost(!showCreatePost),\n        children: showCreatePost ? 'Cancel' : 'Create Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search posts...\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), showCreatePost && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newPostTitle,\n            onChange: e => setNewPostTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Content:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newPostContent,\n            onChange: e => setNewPostContent(e.target.value),\n            rows: \"5\",\n            cols: \"50\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), filteredPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      currentUserId: 'currentUserId',\n      handleDeletePost: handleDeletePost,\n      handleEditPost: handleEditPost,\n      handleAddReply: handleAddReply\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(DiscussionBoard, \"YdmS9vSM1+Y1wjEBJDYf6g61AH0=\");\n_c = DiscussionBoard;\nexport default DiscussionBoard;\nvar _c;\n$RefreshReg$(_c, \"DiscussionBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Post","jsxDEV","_jsxDEV","DiscussionBoard","_s","posts","setPosts","newPostTitle","setNewPostTitle","newPostContent","setNewPostContent","searchQuery","setSearchQuery","showCreatePost","setShowCreatePost","fetchPosts","response","get","data","error","console","handleCreatePost","e","preventDefault","post","title","content","author","handleDeletePost","postId","delete","filter","_id","handleEditPost","updatedTitle","updatedContent","put","map","handleAddReply","replyContent","filteredPosts","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","onSubmit","required","rows","cols","length","currentUserId","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/DiscussionBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';  // Make sure axios is imported\nimport './discussionBoard.css';\nimport Post from './Post'; // Import the Post component\n\nconst DiscussionBoard = () => {\n  const [posts, setPosts] = useState([]);\n  const [newPostTitle, setNewPostTitle] = useState('');\n  const [newPostContent, setNewPostContent] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showCreatePost, setShowCreatePost] = useState(false);\n\n  // Fetch all posts once on component mount\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n\n    fetchPosts();\n  }, []); // Empty dependency array means this only runs once, preventing infinite loops\n\n  // Handler for creating a new post\n  const handleCreatePost = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3000/posts', {\n        title: newPostTitle,\n        content: newPostContent,\n        author: 'currentUserId', // Replace with the actual user id\n      });\n      setPosts([...posts, response.data]);\n      setNewPostTitle('');\n      setNewPostContent('');\n      setShowCreatePost(false);\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n\n  // Handler for deleting a post\n  const handleDeletePost = async (postId) => {\n    try {\n      await axios.delete(`http://localhost:3000/posts/${postId}`);\n      setPosts(posts.filter((post) => post._id !== postId));\n    } catch (error) {\n      console.error('Error deleting post:', error);\n    }\n  };\n\n  // Handler for editing a post\n  const handleEditPost = async (postId, updatedTitle, updatedContent) => {\n    try {\n      const response = await axios.put(`http://localhost:3000/posts/${postId}`, {\n        title: updatedTitle,\n        content: updatedContent,\n      });\n      setPosts(posts.map((post) => (post._id === postId ? response.data : post)));\n    } catch (error) {\n      console.error('Error updating post:', error);\n    }\n  };\n\n  // Handler for adding a reply to a post\n  const handleAddReply = async (postId, replyContent) => {\n    try {\n      const response = await axios.post(`http://localhost:3000/posts/${postId}/replies`, {\n        content: replyContent,\n        author: 'currentUserId', // Replace with the actual user id\n      });\n      setPosts(posts.map((post) => (post._id === postId ? response.data : post)));\n    } catch (error) {\n      console.error('Error adding reply:', error);\n    }\n  };\n\n  // Filter posts based on search query\n  const filteredPosts = posts.filter(\n    (post) =>\n      post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      post.content.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h1 className=\"web-name\">Discussion Board</h1>\n\n      {/* Options */}\n      <div className=\"options\">\n        <button onClick={() => setShowCreatePost(!showCreatePost)}>\n          {showCreatePost ? 'Cancel' : 'Create Post'}\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Search posts...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n      </div>\n\n      {/* Create Post Form */}\n      {showCreatePost && (\n        <form onSubmit={handleCreatePost}>\n          <h2>Create a New Post</h2>\n          <p>\n            <label>\n              Title:<br />\n              <input\n                type=\"text\"\n                value={newPostTitle}\n                onChange={(e) => setNewPostTitle(e.target.value)}\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <label>\n              Content:<br />\n              <textarea\n                value={newPostContent}\n                onChange={(e) => setNewPostContent(e.target.value)}\n                rows=\"5\"\n                cols=\"50\"\n                required\n              />\n            </label>\n          </p>\n          <p>\n            <button type=\"submit\">Submit</button>\n          </p>\n        </form>\n      )}\n\n      <hr />\n\n      <h2>Posts</h2>\n      {filteredPosts.length === 0 ? (\n        <p>No posts found.</p>\n      ) : (\n        filteredPosts.map((post) => (\n          <Post\n            key={post._id}\n            post={post}\n            currentUserId={'currentUserId'}\n            handleDeletePost={handleDeletePost}\n            handleEditPost={handleEditPost}\n            handleAddReply={handleAddReply}\n          />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default DiscussionBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}