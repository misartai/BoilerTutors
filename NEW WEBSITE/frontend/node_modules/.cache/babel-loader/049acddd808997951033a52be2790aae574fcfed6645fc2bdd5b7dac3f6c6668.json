{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/ConfirmCode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmationCode() {\n  _s();\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = new URLSearchParams(location.search).get('email');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/auth/verify-reset-code', {\n        email,\n        code\n      });\n      setMessage('Code verified. Redirecting...');\n      setTimeout(() => {\n        navigate(`/new-password?email=${email}`);\n      }, 2000); // Redirect to new password page\n    } catch (err) {\n      setError('Invalid code. Please try again.');\n    }\n  };\n  const handleResend = async () => {\n    try {\n      await axios.post('/api/auth/resend-reset-code', {\n        email\n      });\n      setMessage('Confirmation code resent.');\n    } catch (err) {\n      setError('Error resending the code.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Confirmation Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter code\",\n      value: code,\n      onChange: e => setCode(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleResend,\n      children: \"Resend Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ConfirmationCode, \"66ko6vdTyUIdHHR1n+JIxA13lxk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ConfirmationCode;\nexport default ConfirmationCode;\nvar _c;\n$RefreshReg$(_c, \"ConfirmationCode\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","ConfirmationCode","_s","code","setCode","error","setError","message","setMessage","navigate","location","email","URLSearchParams","search","get","handleSubmit","e","preventDefault","post","setTimeout","err","handleResend","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","className","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/ConfirmCode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nfunction ConfirmationCode() {\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = new URLSearchParams(location.search).get('email');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('/api/auth/verify-reset-code', { email, code });\n      setMessage('Code verified. Redirecting...');\n      setTimeout(() => {\n        navigate(`/new-password?email=${email}`);\n      }, 2000);  // Redirect to new password page\n    } catch (err) {\n      setError('Invalid code. Please try again.');\n    }\n  };\n\n  const handleResend = async () => {\n    try {\n      await axios.post('/api/auth/resend-reset-code', { email });\n      setMessage('Confirmation code resent.');\n    } catch (err) {\n      setError('Error resending the code.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Enter Confirmation Code</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter code\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        required\n      />\n      <button type=\"submit\">Submit</button>\n      <button type=\"button\" onClick={handleResend}>Resend Code</button>\n      {message && <p className=\"message\">{message}</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default ConfirmationCode;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;EAE/D,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMrB,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAE;QAAEP,KAAK;QAAER;MAAK,CAAC,CAAC;MAChEK,UAAU,CAAC,+BAA+B,CAAC;MAC3CW,UAAU,CAAC,MAAM;QACfV,QAAQ,CAAC,uBAAuBE,KAAK,EAAE,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAE;IACb,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZd,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMzB,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAE;QAAEP;MAAM,CAAC,CAAC;MAC1DH,UAAU,CAAC,2BAA2B,CAAC;IACzC,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZd,QAAQ,CAAC,2BAA2B,CAAC;IACvC;EACF,CAAC;EAED,oBACEN,OAAA;IAAMsB,QAAQ,EAAEP,YAAa;IAAAQ,QAAA,gBAC3BvB,OAAA;MAAAuB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC3B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAE3B,IAAK;MACZ4B,QAAQ,EAAGf,CAAC,IAAKZ,OAAO,CAACY,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;MACzCG,QAAQ;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrC3B,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAACM,OAAO,EAAEb,YAAa;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChEpB,OAAO,iBAAIP,OAAA;MAAGmC,SAAS,EAAC,SAAS;MAAAZ,QAAA,EAAEhB;IAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/CtB,KAAK,iBAAIL,OAAA;MAAGmC,SAAS,EAAC,OAAO;MAAAZ,QAAA,EAAElB;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAACzB,EAAA,CA9CQD,gBAAgB;EAAA,QAINJ,WAAW,EACXC,WAAW;AAAA;AAAAsC,EAAA,GALrBnC,gBAAgB;AAgDzB,eAAeA,gBAAgB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}