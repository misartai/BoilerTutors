{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/Messaging.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Messages({\n  user\n}) {\n  _s();\n  const {\n    email: userEmail\n  } = user;\n  const [messages, setMessages] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState('');\n  const [messageContent, setMessageContent] = useState('');\n  const [announcements, setAnnouncements] = useState([]);\n  const [view, setView] = useState('messages');\n  useEffect(() => {\n    const handleBeforeExit = event => {\n      if (messageContent && selectedContact) {\n        handleSaveDraft();\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeExit);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeExit);\n    };\n  }, [messageContent, selectedContact]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/messages?userEmail=${userEmail}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch messages');\n        }\n        const data = await response.json();\n        const currentDate = new Date();\n        const sixteenWeeksInMillis = 16 * 7 * 24 * 60 * 60 * 1000; // 16 weeks in milliseconds\n\n        // Filter messages that are not older than 16 weeks\n        const validMessages = data.filter(message => {\n          const messageDate = new Date(message.createdAt);\n          return currentDate - messageDate <= sixteenWeeksInMillis;\n        });\n        setMessages(validMessages);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    const fetchContacts = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/contacts?userEmail=${userEmail}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch contacts');\n        }\n        const data = await response.json();\n        setContacts(data);\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchMessages();\n    fetchContacts();\n  }, [userEmail]);\n  useEffect(() => {\n    const fetchAnnouncements = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/announcements');\n        if (!response.ok) {\n          throw new Error('Failed to fetch announcements');\n        }\n        const data = await response.json();\n        setAnnouncements(data);\n      } catch (error) {\n        console.error('Error fetching announcements:', error);\n      }\n    };\n    fetchAnnouncements();\n  }, []);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!messageContent) {\n      alert('Please enter a message.');\n      return;\n    }\n    const newMessage = {\n      senderEmail: userEmail,\n      recipientEmail: selectedContact,\n      content: messageContent\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newMessage)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n      const savedMessage = await response.json();\n      setMessages([...messages, savedMessage]);\n      setMessageContent('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      alert('There was an error sending the message. Please try again.');\n    }\n  };\n  const filteredMessages = messages.filter(message => {\n    return selectedContact ? message.recipientEmail === selectedContact || message.senderEmail === selectedContact : true;\n  });\n  const handleSaveDraft = async () => {\n    if (!messageContent || !selectedContact) {\n      alert('Please enter a message and select a recipient.');\n      return;\n    }\n    const draft = {\n      senderEmail: userEmail,\n      recipientEmail: selectedContact,\n      content: messageContent\n    };\n    try {\n      const response = await fetch('http://localhost:5000/api/drafts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(draft)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save draft');\n      }\n      const savedDraft = await response.json();\n      console.log('Draft saved successfully:', savedDraft);\n      alert('Draft saved successfully!');\n    } catch (error) {\n      console.error('Error saving draft:', error);\n      alert('There was an error saving the draft. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              marginRight: '5px'\n            },\n            children: \"View:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setView(e.target.value),\n            value: view,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"messages\",\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"announcements\",\n              children: \"Announcements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), view === 'messages' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginRight: '5px'\n              },\n              children: \"Filter by Contact:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setSelectedContact(e.target.value),\n              value: selectedContact,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"All Contacts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: contact.email,\n                children: [contact.name, \" (\", contact.email, \")\"]\n              }, contact.email, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-list\",\n            style: {\n              width: '100%',\n              maxHeight: '400px',\n              overflowY: 'scroll'\n            },\n            children: filteredMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [message.senderEmail === userEmail ? 'You' : message.senderEmail, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), \" \", message.content]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), view === 'announcements' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"announcements-list\",\n          style: {\n            width: '100%',\n            maxHeight: '400px',\n            overflowY: 'scroll'\n          },\n          children: announcements.map((announcement, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"announcement-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Announcement:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), \" \", announcement.content]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), view === 'messages' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-form\",\n          style: {\n            width: '100%',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSendMessage,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: messageContent,\n                onChange: e => setMessageContent(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Recipient:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedContact,\n                onChange: e => setSelectedContact(e.target.value),\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Contact\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this), contacts.map(contact => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: contact.email,\n                  children: [contact.name, \" (\", contact.email, \")\"]\n                }, contact.email, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(Messages, \"KUB/P+M+g8myxWDInxtFOa+RUdY=\");\n_c = Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Messages","user","_s","email","userEmail","messages","setMessages","contacts","setContacts","selectedContact","setSelectedContact","messageContent","setMessageContent","announcements","setAnnouncements","view","setView","handleBeforeExit","event","handleSaveDraft","window","addEventListener","removeEventListener","fetchMessages","response","fetch","ok","Error","data","json","currentDate","Date","sixteenWeeksInMillis","validMessages","filter","message","messageDate","createdAt","error","console","fetchContacts","fetchAnnouncements","handleSendMessage","e","preventDefault","alert","newMessage","senderEmail","recipientEmail","content","method","headers","body","JSON","stringify","savedMessage","filteredMessages","draft","savedDraft","log","className","children","style","display","flexDirection","alignItems","width","marginBottom","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","map","contact","name","maxHeight","overflowY","index","announcement","marginTop","onSubmit","type","required","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/Messaging.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport default function Messages({ user }) {\n  const { email: userEmail } = user;\n  const [messages, setMessages] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState('');\n  const [messageContent, setMessageContent] = useState('');\n  const [announcements, setAnnouncements] = useState([]);\n  const [view, setView] = useState('messages');\n\n  useEffect(() => {\n      const handleBeforeExit = (event) => {\n        if (messageContent && selectedContact) {\n            handleSaveDraft();\n        }\n      };\n\n      window.addEventListener('beforeunload', handleBeforeExit);\n\n      return () => {\n        window.removeEventListener('beforeunload', handleBeforeExit);\n      };\n}, [messageContent, selectedContact]);\n\nuseEffect(() => {\n      const fetchMessages = async () => {\n          try {\n              const response = await fetch(`http://localhost:5000/api/messages?userEmail=${userEmail}`);\n              if (!response.ok) {\n                  throw new Error('Failed to fetch messages');\n              }\n              const data = await response.json();\n              const currentDate = new Date();\n              const sixteenWeeksInMillis = 16 * 7 * 24 * 60 * 60 * 1000; // 16 weeks in milliseconds\n\n              // Filter messages that are not older than 16 weeks\n              const validMessages = data.filter(message => {\n                  const messageDate = new Date(message.createdAt);\n                  return (currentDate - messageDate) <= sixteenWeeksInMillis;\n              });\n\n              setMessages(validMessages);\n          } catch (error) {\n              console.error('Error fetching messages:', error);\n          }\n      };\n\n      const fetchContacts = async () => {\n          try {\n              const response = await fetch(`http://localhost:5000/api/contacts?userEmail=${userEmail}`);\n              if (!response.ok) {\n                  throw new Error('Failed to fetch contacts');\n              }\n              const data = await response.json();\n              setContacts(data);\n          } catch (error) {\n              console.error('Error fetching contacts:', error);\n          }\n      };\n\n      fetchMessages();\n      fetchContacts();\n  }, [userEmail]);\n\n  useEffect(() => {\n      const fetchAnnouncements = async () => {\n          try {\n              const response = await fetch('http://localhost:5000/api/announcements');\n              if (!response.ok) {\n                  throw new Error('Failed to fetch announcements');\n              }\n              const data = await response.json();\n              setAnnouncements(data);\n          } catch (error) {\n              console.error('Error fetching announcements:', error);\n          }\n      };\n\n      fetchAnnouncements();\n  }, []);\n\n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n\n    if (!messageContent) {\n      alert('Please enter a message.');\n      return;\n    }\n\n    const newMessage = {\n      senderEmail: userEmail,\n      recipientEmail: selectedContact,\n      content: messageContent,\n    };\n\n    try {\n      const response = await fetch('http://localhost:5000/api/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newMessage),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      const savedMessage = await response.json();\n      setMessages([...messages, savedMessage]);\n      setMessageContent('');\n    } catch (error) {\n      console.error('Error sending message:', error);\n      alert('There was an error sending the message. Please try again.');\n    }\n  };\n\n  const filteredMessages = messages.filter(message => {\n    return selectedContact ? message.recipientEmail === selectedContact || message.senderEmail === selectedContact : true;\n  });\n\nconst handleSaveDraft = async () => {\n  if (!messageContent || !selectedContact) {\n    alert('Please enter a message and select a recipient.');\n    return;\n  }\n\n  const draft = {\n    senderEmail: userEmail,\n    recipientEmail: selectedContact,\n    content: messageContent,\n  };\n\n  try {\n    const response = await fetch('http://localhost:5000/api/drafts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(draft),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to save draft');\n    }\n\n    const savedDraft = await response.json();\n    console.log('Draft saved successfully:', savedDraft);\n    alert('Draft saved successfully!');\n  } catch (error) {\n    console.error('Error saving draft:', error);\n    alert('There was an error saving the draft. Please try again.');\n  }\n};\n\n  return (\n    <div className=\"main\">\n      <div className=\"messages-container\">\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\n          <div style={{ marginBottom: '10px', width: '100%' }}>\n            <label style={{ marginRight: '5px' }}>View:</label>\n            <select onChange={(e) => setView(e.target.value)} value={view}>\n              <option value=\"messages\">Messages</option>\n              <option value=\"announcements\">Announcements</option>\n            </select>\n          </div>\n\n          {view === 'messages' && (\n            <>\n              <div style={{ marginBottom: '10px', width: '100%' }}>\n                <label style={{ marginRight: '5px' }}>Filter by Contact:</label>\n                <select onChange={(e) => setSelectedContact(e.target.value)} value={selectedContact}>\n                  <option value=\"\">All Contacts</option>\n                  {contacts.map(contact => (\n                    <option key={contact.email} value={contact.email}>\n                      {contact.name} ({contact.email})\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"messages-list\" style={{ width: '100%', maxHeight: '400px', overflowY: 'scroll' }}>\n                {filteredMessages.map((message, index) => (\n                  <div key={index} className=\"message-item\">\n                    <strong>{message.senderEmail === userEmail ? 'You' : message.senderEmail}:</strong> {message.content}\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n\n          {view === 'announcements' && (\n            <div className=\"announcements-list\" style={{ width: '100%', maxHeight: '400px', overflowY: 'scroll' }}>\n              {announcements.map((announcement, index) => (\n                <div key={index} className=\"announcement-item\">\n                  <strong>Announcement:</strong> {announcement.content}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {view === 'messages' && (\n            <div className=\"message-form\" style={{ width: '100%', marginTop: '10px' }}>\n              <form onSubmit={handleSendMessage}>\n                <div>\n                  <label>Message:</label>\n                  <input\n                    type=\"text\"\n                    value={messageContent}\n                    onChange={(e) => setMessageContent(e.target.value)}\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Recipient:</label>\n                  <select\n                    value={selectedContact}\n                    onChange={(e) => setSelectedContact(e.target.value)}\n                    required\n                  >\n                    <option value=\"\">Select Contact</option>\n                    {contacts.map(contact => (\n                      <option key={contact.email} value={contact.email}>\n                        {contact.name} ({contact.email})\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <button type=\"submit\">Send Message</button>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM;IAAEC,KAAK,EAAEC;EAAU,CAAC,GAAGH,IAAI;EACjC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,UAAU,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ,MAAMsB,gBAAgB,GAAIC,KAAK,IAAK;MAClC,IAAIP,cAAc,IAAIF,eAAe,EAAE;QACnCU,eAAe,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEJ,gBAAgB,CAAC;IAEzD,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEL,gBAAgB,CAAC;IAC9D,CAAC;EACP,CAAC,EAAE,CAACN,cAAc,EAAEF,eAAe,CAAC,CAAC;EAErCd,SAAS,CAAC,MAAM;IACV,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgDrB,SAAS,EAAE,CAAC;QACzF,IAAI,CAACoB,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;QAC9B,MAAMC,oBAAoB,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;QAE3D;QACA,MAAMC,aAAa,GAAGL,IAAI,CAACM,MAAM,CAACC,OAAO,IAAI;UACzC,MAAMC,WAAW,GAAG,IAAIL,IAAI,CAACI,OAAO,CAACE,SAAS,CAAC;UAC/C,OAAQP,WAAW,GAAGM,WAAW,IAAKJ,oBAAoB;QAC9D,CAAC,CAAC;QAEF1B,WAAW,CAAC2B,aAAa,CAAC;MAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAED,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gDAAgDrB,SAAS,EAAE,CAAC;QACzF,IAAI,CAACoB,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCrB,WAAW,CAACoB,IAAI,CAAC;MACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IAEDf,aAAa,CAAC,CAAC;IACfiB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACpC,SAAS,CAAC,CAAC;EAEfT,SAAS,CAAC,MAAM;IACZ,MAAM8C,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACA,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;QACvE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QACpD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCf,gBAAgB,CAACc,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDG,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACrCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACjC,cAAc,EAAE;MACnBkC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEA,MAAMC,UAAU,GAAG;MACjBC,WAAW,EAAE3C,SAAS;MACtB4C,cAAc,EAAEvC,eAAe;MAC/BwC,OAAO,EAAEtC;IACX,CAAC;IAED,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEyB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACtB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,MAAM4B,YAAY,GAAG,MAAM/B,QAAQ,CAACK,IAAI,CAAC,CAAC;MAC1CvB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEkD,YAAY,CAAC,CAAC;MACxC3C,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CO,KAAK,CAAC,2DAA2D,CAAC;IACpE;EACF,CAAC;EAED,MAAMW,gBAAgB,GAAGnD,QAAQ,CAAC6B,MAAM,CAACC,OAAO,IAAI;IAClD,OAAO1B,eAAe,GAAG0B,OAAO,CAACa,cAAc,KAAKvC,eAAe,IAAI0B,OAAO,CAACY,WAAW,KAAKtC,eAAe,GAAG,IAAI;EACvH,CAAC,CAAC;EAEJ,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACR,cAAc,IAAI,CAACF,eAAe,EAAE;MACvCoC,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;IAEA,MAAMY,KAAK,GAAG;MACZV,WAAW,EAAE3C,SAAS;MACtB4C,cAAc,EAAEvC,eAAe;MAC/BwC,OAAO,EAAEtC;IACX,CAAC;IAED,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DyB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,KAAK;MAC5B,CAAC,CAAC;MAEF,IAAI,CAACjC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,MAAM+B,UAAU,GAAG,MAAMlC,QAAQ,CAACK,IAAI,CAAC,CAAC;MACxCU,OAAO,CAACoB,GAAG,CAAC,2BAA2B,EAAED,UAAU,CAAC;MACpDb,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CO,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;EAEC,oBACEhD,OAAA;IAAK+D,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBhE,OAAA;MAAK+D,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjChE,OAAA;QAAKiE,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,UAAU,EAAE,QAAQ;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAL,QAAA,gBAC5FhE,OAAA;UAAKiE,KAAK,EAAE;YAAEK,YAAY,EAAE,MAAM;YAAED,KAAK,EAAE;UAAO,CAAE;UAAAL,QAAA,gBAClDhE,OAAA;YAAOiE,KAAK,EAAE;cAAEM,WAAW,EAAE;YAAM,CAAE;YAAAP,QAAA,EAAC;UAAK;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnD3E,OAAA;YAAQ4E,QAAQ,EAAG9B,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAAC+B,MAAM,CAACC,KAAK,CAAE;YAACA,KAAK,EAAE5D,IAAK;YAAA8C,QAAA,gBAC5DhE,OAAA;cAAQ8E,KAAK,EAAC,UAAU;cAAAd,QAAA,EAAC;YAAQ;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC1C3E,OAAA;cAAQ8E,KAAK,EAAC,eAAe;cAAAd,QAAA,EAAC;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAELzD,IAAI,KAAK,UAAU,iBAClBlB,OAAA,CAAAE,SAAA;UAAA8D,QAAA,gBACEhE,OAAA;YAAKiE,KAAK,EAAE;cAAEK,YAAY,EAAE,MAAM;cAAED,KAAK,EAAE;YAAO,CAAE;YAAAL,QAAA,gBAClDhE,OAAA;cAAOiE,KAAK,EAAE;gBAAEM,WAAW,EAAE;cAAM,CAAE;cAAAP,QAAA,EAAC;YAAkB;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChE3E,OAAA;cAAQ4E,QAAQ,EAAG9B,CAAC,IAAKjC,kBAAkB,CAACiC,CAAC,CAAC+B,MAAM,CAACC,KAAK,CAAE;cAACA,KAAK,EAAElE,eAAgB;cAAAoD,QAAA,gBAClFhE,OAAA;gBAAQ8E,KAAK,EAAC,EAAE;gBAAAd,QAAA,EAAC;cAAY;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACrCjE,QAAQ,CAACqE,GAAG,CAACC,OAAO,iBACnBhF,OAAA;gBAA4B8E,KAAK,EAAEE,OAAO,CAAC1E,KAAM;gBAAA0D,QAAA,GAC9CgB,OAAO,CAACC,IAAI,EAAC,IAAE,EAACD,OAAO,CAAC1E,KAAK,EAAC,GACjC;cAAA,GAFa0E,OAAO,CAAC1E,KAAK;gBAAAkE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAElB,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAEN3E,OAAA;YAAK+D,SAAS,EAAC,eAAe;YAACE,KAAK,EAAE;cAAEI,KAAK,EAAE,MAAM;cAAEa,SAAS,EAAE,OAAO;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAAnB,QAAA,EAC9FL,gBAAgB,CAACoB,GAAG,CAAC,CAACzC,OAAO,EAAE8C,KAAK,kBACnCpF,OAAA;cAAiB+D,SAAS,EAAC,cAAc;cAAAC,QAAA,gBACvChE,OAAA;gBAAAgE,QAAA,GAAS1B,OAAO,CAACY,WAAW,KAAK3C,SAAS,GAAG,KAAK,GAAG+B,OAAO,CAACY,WAAW,EAAC,GAAC;cAAA;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrC,OAAO,CAACc,OAAO;YAAA,GAD5FgC,KAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CACH,EAEAzD,IAAI,KAAK,eAAe,iBACvBlB,OAAA;UAAK+D,SAAS,EAAC,oBAAoB;UAACE,KAAK,EAAE;YAAEI,KAAK,EAAE,MAAM;YAAEa,SAAS,EAAE,OAAO;YAAEC,SAAS,EAAE;UAAS,CAAE;UAAAnB,QAAA,EACnGhD,aAAa,CAAC+D,GAAG,CAAC,CAACM,YAAY,EAAED,KAAK,kBACrCpF,OAAA;YAAiB+D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAC5ChE,OAAA;cAAAgE,QAAA,EAAQ;YAAa;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACU,YAAY,CAACjC,OAAO;UAAA,GAD5CgC,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EAEAzD,IAAI,KAAK,UAAU,iBAClBlB,OAAA;UAAK+D,SAAS,EAAC,cAAc;UAACE,KAAK,EAAE;YAAEI,KAAK,EAAE,MAAM;YAAEiB,SAAS,EAAE;UAAO,CAAE;UAAAtB,QAAA,eACxEhE,OAAA;YAAMuF,QAAQ,EAAE1C,iBAAkB;YAAAmB,QAAA,gBAChChE,OAAA;cAAAgE,QAAA,gBACEhE,OAAA;gBAAAgE,QAAA,EAAO;cAAQ;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACvB3E,OAAA;gBACEwF,IAAI,EAAC,MAAM;gBACXV,KAAK,EAAEhE,cAAe;gBACtB8D,QAAQ,EAAG9B,CAAC,IAAK/B,iBAAiB,CAAC+B,CAAC,CAAC+B,MAAM,CAACC,KAAK,CAAE;gBACnDW,QAAQ;cAAA;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACN3E,OAAA;cAAAgE,QAAA,gBACEhE,OAAA;gBAAAgE,QAAA,EAAO;cAAU;gBAAAQ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzB3E,OAAA;gBACE8E,KAAK,EAAElE,eAAgB;gBACvBgE,QAAQ,EAAG9B,CAAC,IAAKjC,kBAAkB,CAACiC,CAAC,CAAC+B,MAAM,CAACC,KAAK,CAAE;gBACpDW,QAAQ;gBAAAzB,QAAA,gBAERhE,OAAA;kBAAQ8E,KAAK,EAAC,EAAE;kBAAAd,QAAA,EAAC;gBAAc;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACvCjE,QAAQ,CAACqE,GAAG,CAACC,OAAO,iBACnBhF,OAAA;kBAA4B8E,KAAK,EAAEE,OAAO,CAAC1E,KAAM;kBAAA0D,QAAA,GAC9CgB,OAAO,CAACC,IAAI,EAAC,IAAE,EAACD,OAAO,CAAC1E,KAAK,EAAC,GACjC;gBAAA,GAFa0E,OAAO,CAAC1E,KAAK;kBAAAkE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElB,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,eACN3E,OAAA;cAAQwF,IAAI,EAAC,QAAQ;cAAAxB,QAAA,EAAC;YAAY;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtE,EAAA,CA3OuBF,QAAQ;AAAAuF,EAAA,GAARvF,QAAQ;AAAA,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}