{"ast":null,"code":"var _jsxFileName = \"/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/EmailVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailVerification() {\n  _s();\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = new URLSearchParams(location.search).get('email'); // Get the email from the query string\n\n  // Handle form submission for verification code\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/verify-email', {\n        email,\n        confirmationCode: code\n      });\n      const {\n        token,\n        validAccount\n      } = response.data;\n\n      // Save the token in localStorage\n      localStorage.setItem('token', token);\n      if (validAccount === false) {\n        setMessage('Email verified successfully. Redirecting...');\n        setTimeout(() => {\n          navigate('/pending-approval'); // Redirect to a \"Pending Approval\" page\n        }, 1300); // Wait for 1 seconds before redirecting\n      } else {\n        setMessage('Email verified successfully. Redirecting...');\n        setTimeout(() => {\n          navigate('/dashboard'); // Redirect to a \"Pending Approval\" page\n        }, 1300);\n      }\n    } catch (err) {\n      setError('Invalid confirmation code. Please try again.');\n    }\n  };\n\n  // Handle resending the email\n  const handleResend = async () => {\n    try {\n      await axios.post('/api/auth/resend-email', {\n        email\n      });\n      setMessage('Verification email resent. Please check your inbox.');\n    } catch (err) {\n      setError('Error resending verification email. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"A confirmation code has been sent to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }, this), \". Please enter it below.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter verification code\",\n      value: code,\n      onChange: e => setCode(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleResend,\n      children: \"Resend Verification Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailVerification, \"66ko6vdTyUIdHHR1n+JIxA13lxk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EmailVerification;\nexport default EmailVerification;\nvar _c;\n$RefreshReg$(_c, \"EmailVerification\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","EmailVerification","_s","code","setCode","error","setError","message","setMessage","navigate","location","email","URLSearchParams","search","get","handleSubmit","e","preventDefault","response","post","confirmationCode","token","validAccount","data","localStorage","setItem","setTimeout","err","handleResend","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","className","_c","$RefreshReg$"],"sources":["/Users/shivliagrawal/Desktop/boilertutors/BoilerTutors/NEW WEBSITE/frontend/src/components/EmailVerification.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nfunction EmailVerification() {\n  const [code, setCode] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = new URLSearchParams(location.search).get('email');  // Get the email from the query string\n\n  // Handle form submission for verification code\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/verify-email', { email, confirmationCode: code });\n      const { token, validAccount } = response.data;\n\n      // Save the token in localStorage\n      localStorage.setItem('token', token);\n\n      if (validAccount === false) {\n        setMessage('Email verified successfully. Redirecting...');\n        setTimeout(() => {\n          navigate('/pending-approval');  // Redirect to a \"Pending Approval\" page\n        }, 1300);  // Wait for 1 seconds before redirecting\n      } else {\n        setMessage('Email verified successfully. Redirecting...');\n        setTimeout(() => {\n          navigate('/dashboard');  // Redirect to a \"Pending Approval\" page\n        }, 1300);\n      }\n    } catch (err) {\n      setError('Invalid confirmation code. Please try again.');\n    }\n  };\n\n  // Handle resending the email\n  const handleResend = async () => {\n    try {\n      await axios.post('/api/auth/resend-email', { email });\n      setMessage('Verification email resent. Please check your inbox.');\n    } catch (err) {\n      setError('Error resending verification email. Please try again later.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Email Verification</h2>\n      <p>A confirmation code has been sent to <strong>{email}</strong>. Please enter it below.</p>\n      \n      <input\n        type=\"text\"\n        placeholder=\"Enter verification code\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        required\n      />\n      \n      <button type=\"submit\">Submit</button>\n      \n      <button type=\"button\" onClick={handleResend}>\n        Resend Verification Email\n      </button>\n\n      {message && <p className=\"message\">{message}</p>}\n      {error && <p className=\"error\">{error}</p>}\n    </form>\n  );\n}\n\nexport default EmailVerification;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}